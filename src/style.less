/* functions */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* color classes */
.bg-color-body { background-color: #f7f7f7; }
.fg-color-body { color: #333; }

body {
    padding: 0;
    position: relative;
    font-family: Helvetica Neue, Helvetica, Arial;
    font-size: 16px;
    line-height: 24px;
}

p { margin-bottom: 1em; }

h1,
h2 {
    line-height: 1em;
    margin-bottom: 0.4em;
}

.noselect { user-select: none; }

@goldenratio: 1.61803398875;
@size: 612px;
@tiles: 4;

@tile-size: 100% / @tiles;

@pos1: 0 * @tile-size;
@pos2: 1 * @tile-size;
@pos3: 2 * @tile-size;
@pos4: 3 * @tile-size;

@content1: 0 * (100% / (@tiles - 1));
@content2: 1 * (100% / (@tiles - 1));
@content3: 2 * (100% / (@tiles - 1));
@content4: 3 * (100% / (@tiles - 1));

@btn-color: #ccddee;
@dialog-backdrop-color: #333;
@radius: 3px;

.page {
    position: relative;
    width: 100%;
    clear: both;
    max-width: 100%;
}

.container {
    position: relative;
    margin: 0 auto;
    background-color: #fff;

    @media (orientation: landscape) {
        width: 85vh; 
    }
}

.left { float: left; }
.right { float: right; }
.page { height: 100%; }

.page.page-animated {
    transition-property: left;
    transition-duration: 0.5s;
}

.page-header {
    position: fixed;
    top: 0;
    width: 100%;
    height: 44px;
    background-color: darken(@btn-color, 10%);
    font-size: 24px;
    line-height: 44px;
    color: darken(@btn-color, 40%);
    text-shadow: 0px 1px 1px fade(#fff, 50%);
    text-overflow: ellipsis;
    white-space: nowrap;
    padding: 4px 8px;
    z-index: 100;
    opacity: 0.95;

    @media (orientation: landscape) {
        width: 85vh; 
    }

    .btn {
        position: relative;
        min-width: 36px;
        height: 33px;
        z-index: 101;
    }

    .btn.left {
        margin-right: 8px;
    }

    .btn.right {
        margin-left: 8px;
    }
}

.page-content {
    position: absolute;
    margin: 52px 8px 8px 8px;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.status-text {
    text-align: center;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.status-image {
    margin-right: 8px;
    height: 36px;
    width: 36px;
    border-radius: @radius;
    background-size: 100%;
    float: left;
}

.btn {
    display: inline-block;
	padding: 3px 6px;
	background-color: @btn-color;
    box-shadow: 0 3px darken(@btn-color, 20%);
    border: none;
	border-radius: @radius;
	color: darken(@btn-color, 30%);
	text-shadow: 0px 1px 1px fade(#fff, 50%);
    font-size: 18px;
    line-height: 18px;
    height: 41px;
    cursor: pointer;
    transition-property: background-color;
    transition-duration: 0.3s;
    margin-bottom: 3px;

	&:active {
        position: relative;
        top: 3px;
        box-shadow: none;
        background-color: @btn-color;
	}

    &:hover,
    &:focus {
        background-color: @btn-color;
        outline: 0;
	}

    &.btn-full-width {
        display: block;
        width: 100%;
    }
}

.btn-group {
    .btn {
        margin-bottom: 9px;
    }
}

.hidden { display: none; }

.pictures img {
    width: 25%;
    padding: 2px;
    cursor: pointer;
}

.container {
    position: relative;
    max-width: @size * @goldenratio;
}

.container-inner {
    width: 100%;
    position: relative;
    transition-duration: 0.25s;
    transition-property: right;
}

.container-inner.open {
    right: 100%;
    margin: 0 -52px 0 52px;
    transition-duration: 0.25s;
    transition-property: right;
}

.puzzle { width: 100%; }

.puzzle-content {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
}

.tile {
    position: absolute;
    width: @tile-size;
    height: @tile-size;
    cursor: pointer;
    .noselect;
}

.tile-animated {
    transition-property: left, top;
    transition-duration: 0.2s;
}

.tile-content {
    background-size: 100% * @tiles;

    border-radius: 3px;
    box-shadow: inset 1px 1px 0 rgba(255, 255, 255, 0.7), inset -1px -1px 0 rgba(0, 0, 0, 0.3), 1px 1px 2px rgba(0,0,0,0.3);
}


.generate-tiles(@i) when (@i < @tiles * @tiles) {
    @x: mod(@i, @tiles);
    @y: floor(@i / @tiles);

    @tile-content: 100% / (@tiles - 1);
    @tile-pos: 100% / @tiles;

    .tile-content-@{i} {
        background-position: (@tile-content * @x) (@tile-content * @y);
    }

    .tile-pos-@{i} {
        left: @tile-pos * @x;
        top: @tile-pos * @y;
        z-index: @i;
    }


    .generate-tiles(@i + 1);
}

.generate-tiles(0);
